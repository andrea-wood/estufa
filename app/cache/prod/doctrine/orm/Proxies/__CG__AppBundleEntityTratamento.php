<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Tratamento extends \AppBundle\Entity\Tratamento implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Tratamento' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Tratamento' . "\0" . 'createdAt', '' . "\0" . 'AppBundle\\Entity\\Tratamento' . "\0" . 'days', '' . "\0" . 'AppBundle\\Entity\\Tratamento' . "\0" . 'expiredAt', '' . "\0" . 'AppBundle\\Entity\\Tratamento' . "\0" . 'produto_name', '' . "\0" . 'AppBundle\\Entity\\Tratamento' . "\0" . 'produto', '' . "\0" . 'AppBundle\\Entity\\Tratamento' . "\0" . 'ciclo', '' . "\0" . 'AppBundle\\Entity\\Tratamento' . "\0" . 'endedAt', '' . "\0" . 'AppBundle\\Entity\\Tratamento' . "\0" . 'isEnded'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Tratamento' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Tratamento' . "\0" . 'createdAt', '' . "\0" . 'AppBundle\\Entity\\Tratamento' . "\0" . 'days', '' . "\0" . 'AppBundle\\Entity\\Tratamento' . "\0" . 'expiredAt', '' . "\0" . 'AppBundle\\Entity\\Tratamento' . "\0" . 'produto_name', '' . "\0" . 'AppBundle\\Entity\\Tratamento' . "\0" . 'produto', '' . "\0" . 'AppBundle\\Entity\\Tratamento' . "\0" . 'ciclo', '' . "\0" . 'AppBundle\\Entity\\Tratamento' . "\0" . 'endedAt', '' . "\0" . 'AppBundle\\Entity\\Tratamento' . "\0" . 'isEnded'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Tratamento $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setDays($days)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDays', [$days]);

        return parent::setDays($days);
    }

    /**
     * {@inheritDoc}
     */
    public function getDays()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDays', []);

        return parent::getDays();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpiredAt($expiredAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpiredAt', [$expiredAt]);

        return parent::setExpiredAt($expiredAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpiredAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpiredAt', []);

        return parent::getExpiredAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setProdutoName($produtoName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProdutoName', [$produtoName]);

        return parent::setProdutoName($produtoName);
    }

    /**
     * {@inheritDoc}
     */
    public function getProdutoName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProdutoName', []);

        return parent::getProdutoName();
    }

    /**
     * {@inheritDoc}
     */
    public function setProduto(\AppBundle\Entity\Produto $produto = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProduto', [$produto]);

        return parent::setProduto($produto);
    }

    /**
     * {@inheritDoc}
     */
    public function getProduto()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProduto', []);

        return parent::getProduto();
    }

    /**
     * {@inheritDoc}
     */
    public function setCiclo(\AppBundle\Entity\Ciclo $ciclo = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCiclo', [$ciclo]);

        return parent::setCiclo($ciclo);
    }

    /**
     * {@inheritDoc}
     */
    public function getCiclo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCiclo', []);

        return parent::getCiclo();
    }

    /**
     * {@inheritDoc}
     */
    public function getExpirationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpirationDate', []);

        return parent::getExpirationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function diffExpirationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'diffExpirationDate', []);

        return parent::diffExpirationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndedAt($endedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndedAt', [$endedAt]);

        return parent::setEndedAt($endedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndedAt', []);

        return parent::getEndedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsEnded($isEnded)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsEnded', [$isEnded]);

        return parent::setIsEnded($isEnded);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsEnded()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsEnded', []);

        return parent::getIsEnded();
    }

    /**
     * {@inheritDoc}
     */
    public function setInitialEndedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInitialEndedAt', []);

        return parent::setInitialEndedAt();
    }

}
